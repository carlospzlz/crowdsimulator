digraph "CrowdEngine.cpp"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="CrowdEngine.cpp",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="CrowdEngine.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_crowd_engine_8h.html",tooltip="This is the core class of the application. It is the abstract virtual world; it stores and handle the..."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="CellPartition.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_cell_partition_8h.html",tooltip="Abstract class which defines the interface of a cell partition mechanism. This is essential for handl..."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Agent.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_agent_8h.html",tooltip="This implements the body of the agent, which includes all the physical properties, neighbourhood, messages, transformation, etc. and knows about the brain, a lua function which is called every time an update occurs. "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="set",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="sstream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="math.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="ngl/Vec3.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="ngl/Transformation.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="ngl/Obj.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="lua.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="lualib.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="lauxlib.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="PhysicsEngine.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_physics_engine_8h.html",tooltip="This abstract class represents the interface of a physics engine, which is the responsible of handle ..."];
  Node14 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="ngl/Vec2.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
}
